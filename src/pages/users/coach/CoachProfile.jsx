import { useState, useEffect } from "react";
import {
  FaStar,
  FaMapMarkerAlt,
  FaMoneyBillWave,
  FaCalendarAlt,
  FaCertificate,
  FaCheckCircle,
} from "react-icons/fa";
import { memo } from "react";
import { formatPrice } from "../../../utils/formatUtils";
import "./CoachProfile.scss";
import { useNavigate, useParams } from "react-router-dom";
import coachService from "../../../services/coachService";
import CourtReviews from "../courts/court_detail/CourtReviews";

const CoachProfile = () => {
  // S·ª≠ d·ª•ng useParams ƒë·ªÉ l·∫•y coachId t·ª´ URL
  const { coachId } = useParams();

  // State ƒë·ªÉ l∆∞u th√¥ng tin coach
  const [coach, setCoach] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const navigate = useNavigate();

  const handleContract = () => {
    navigate(`/chat`, { state: { userId: coachId, role: "Coach" } });
  };

  const handleBooking = () => {
    navigate(`/coach-booking/${coachId}/court-selector/${coach.type}`);
  };
  // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin coach d·ª±a tr√™n coachId
  useEffect(() => {
    const fetchCoachData = async () => {
      try {
        setLoading(true);
        setError(null);

        // G·ªçi API getById t·ª´ coachService
        const response = await coachService.getCoachProfile(coachId);

        // Ki·ªÉm tra k·∫øt qu·∫£ t·ª´ API
        if (response.isSuccessed) {
          setCoach(response.resultObj);
        } else {
          setError(
            response.message || "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin hu·∫•n luy·ªán vi√™n"
          );
        }
      } catch (err) {
        console.error("L·ªói khi l·∫•y th√¥ng tin hu·∫•n luy·ªán vi√™n:", err);
        setError(
          typeof err === "string" ? err : "ƒê√£ x·∫£y ra l·ªói khi t·∫£i d·ªØ li·ªáu"
        );
      } finally {
        setLoading(false);
      }
    };

    if (coachId) {
      fetchCoachData();
    }
  }, [coachId]);

  // Hi·ªÉn th·ªã tr·∫°ng th√°i loading
  if (loading) {
    return (
      <div className="coach-profile-loading">
        ƒêang t·∫£i th√¥ng tin hu·∫•n luy·ªán vi√™n...
      </div>
    );
  }

  // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥
  if (error) {
    return <div className="coach-profile-error">{error}</div>;
  }

  // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu kh√¥ng t√¨m th·∫•y coach
  if (!coach) {
    return (
      <div className="coach-profile-not-found">
        Kh√¥ng t√¨m th·∫•y th√¥ng tin hu·∫•n luy·ªán vi√™n
      </div>
    );
  }

  return (
    <div className="coach-profile-container">
      <div className="coach-profile-card">
        {/* Left side - Avatar and basic info */}
        <div className="coach-profile-left">
          <div className="coach-avatar-container">
            {coach.avatar ? (
              <img src={coach.avatar} alt={coach.fullName} />
            ) : (
              <div className="avatar-circle">
                <span className="avatar-text">{coach.fullName.charAt(0)}</span>
              </div>
            )}
          </div>

          <div className="coach-basic-info">
            <h2>{coach.fullName}</h2>
            <div className="coach-specialty">
              <div className="specialty">{coach.specialty}</div>
              <div className="rating">
                <FaStar className="star-icon" />
                <span>{coach.rating} ƒë√°nh gi√°</span>
              </div>
            </div>

            <div className="coach-key-details">
              <div className="key-detail-item">
                <FaCalendarAlt className="detail-icon" />
                <span>{coach.workingDate}</span>
              </div>
              <div className="key-detail-item">
                <FaCertificate className="detail-icon" />
                <span>{coach.certificate}</span>
              </div>
              <div className="key-detail-item">
                <FaMapMarkerAlt className="detail-icon" />
                <span>{coach.workingAddress}</span>
              </div>
              <div className="key-detail-item price">
                <FaMoneyBillWave className="detail-icon" />
                <span>{formatPrice(coach.pricePerSession)} VNƒê/bu·ªïi</span>
              </div>
            </div>
          </div>
        </div>

        {/* Right side - Detailed information */}
        <div className="coach-profile-right">
          <div className="coach-details-section">
            {/* Experience & Area */}
            <div className="detail-row">
              <div className="detail-icon-container">üìç</div>
              <div className="detail-content">
                <strong>Khu v·ª±c d·∫°y:</strong> {coach.workingAddress}
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">üèÜ</div>
              <div className="detail-content">
                <strong>Kinh nghi·ªám:</strong> {coach.experience}
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">ü•á</div>
              <div className="detail-content">
                <strong>Ch·ª©ng ch·ªâ:</strong> {coach.certificate}
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">üë•</div>
              <div className="detail-content">
                <strong>ƒê·ªëi t∆∞·ª£ng:</strong> {coach.targetAudience}
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">üìÖ</div>
              <div className="detail-content">
                <strong>L·ªãch d·∫°y:</strong> {coach.workingDate}
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">üèüÔ∏è</div>
              <div className="detail-content">
                <strong>ƒê·ªãa ƒëi·ªÉm:</strong> Theo y√™u c·∫ßu (tho·∫£ thu·∫≠n)
              </div>
            </div>

            <div className="detail-row">
              <div className="detail-icon-container">üí∞</div>
              <div className="detail-content">
                <strong>H·ªçc ph√≠:</strong> {formatPrice(coach.pricePerSession)}{" "}
                VNƒê/bu·ªïi
              </div>
            </div>

            {/* Training Content */}
            <div className="training-content-section">
              <h3>
                <span className="fire-icon">üî•</span> N·ªôi dung ƒë√†o t·∫°o:
              </h3>
              <ul className="training-list">
                <li className="training-item">
                  <FaCheckCircle className="check-icon" />
                  <span>
                    Th·ªÉ l·ª±c & t·ªëc ƒë·ªô: B√†i t·∫≠p tƒÉng c∆∞·ªùng s·ª©c b·ªÅn, ph·∫£n x·∫° nhanh
                  </span>
                </li>
                <li className="training-item">
                  <FaCheckCircle className="check-icon" />
                  <span>
                    Chi·∫øn thu·∫≠t thi ƒë·∫•u: ƒê·ªçc tr·∫≠n ƒë·∫•u, ch∆°i theo ƒë·ªôi h√¨nh ph√π
                    h·ª£p
                  </span>
                </li>
                <li className="training-item">
                  <FaCheckCircle className="check-icon" />
                  <span>
                    C·∫£i thi·ªán v·ªã tr√≠ thi ƒë·∫•u: H·ªó tr·ª£ luy·ªán t·∫≠p chuy√™n s√¢u theo
                    v·ªã tr√≠ s·ªü tr∆∞·ªùng
                  </span>
                </li>
                <li className="training-item">
                  <FaCheckCircle className="check-icon" />
                  <span>
                    Hu·∫•n luy·ªán c√° nh√¢n ho·∫∑c nh√≥m nh·ªè: ƒê·∫£m b·∫£o hi·ªáu qu·∫£ t·ªëi ƒëa
                    cho h·ªçc vi√™n
                  </span>
                </li>
              </ul>
            </div>

            {/* Contact CTA */}
            <div className="contact-section">
              <p className="contact-message">
                üëã{" "}
                {coach.contactMessage ||
                  "Li√™n h·ªá ngay ƒë·ªÉ ƒë·∫∑t l·ªãch h·ªçc v√† n√¢ng cao k·ªπ nƒÉng c·ªßa b·∫°n!"}
              </p>
              <div className="contact-buttons">
                <button onClick={handleContract} className="contact-button">
                  Li√™n h·ªá
                </button>
                <button
                  onClick={handleBooking}
                  className="contact-button schedule-button"
                >
                  ƒê·∫∑t l·ªãch
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <CourtReviews revieweeId={coachId} />
    </div>
  );
};

export default memo(CoachProfile);
